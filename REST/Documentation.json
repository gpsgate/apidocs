{  
   "swagger":"2.0",
   "info":{  
      "title":"GpsGate API Documentation",
      "description":"GpsGate API service",
      "contact":{  
         "email":"support@gpsgate.com"
      },
      "version":"v.1"
   },
   "basePath":"/comGpsGate/api/v.1",
   "paths":{  
      "/applications/{applicationid:int}/views":{  
         "get":{  
            "tags":[  
               "Views"
            ],
            "summary":"Return a list of Views.",
            "description":"",
            "operationId":"GetViews",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/ViewModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/variables":{  
         "get":{  
            "tags":[  
               "Variables"
            ],
            "summary":"Return a list of Variables.",
            "description":"",
            "operationId":"GetVariables",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/VariableModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/users":{  
         "get":{  
            "tags":[  
               "Users"
            ],
            "summary":"Return a list of Users.",
            "description":"",
            "operationId":"GetUsers",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               },
               {  
                  "name":"ViewId",
                  "in":"query",
                  "description":"Filters the result set by ViewId",
                  "required":false,
                  "type":"integer"
               },
               {  
                  "name":"UpdatesFrom",
                  "in":"query",
                  "description":"Returns all users that has been active after this timestamp (As defined by date-time - <a href=\"https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\"><b>RFC3339</b></a>)<br/>Sample date-time: <b>1996-12-19T16:39:57-08:00</b> <br/>This represents 39 minutes and 57 seconds after the 16th hour of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time). Note that this is equivalent to <b>1996-12-20T00:39:57Z</b> in UTC.",
                  "required":false,
                  "type":"string",
                  "format":"date-time\t"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/UserModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/users/{userid:long}":{  
         "get":{  
            "tags":[  
               "Users"
            ],
            "summary":"Return a User by ID.",
            "description":"",
            "operationId":"GetUser",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"userid:long",
                  "in":"path",
                  "description":"ID of the User you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/UserModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/users/{userid:int}/status":{  
         "get":{  
            "tags":[  
               "Users"
            ],
            "summary":"Get the latest value of each message field (device status signal) sent to server.",
            "description":"",
            "operationId":"GetStatus",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"ID of the user.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/UserStatusModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/users/{userid:int}/tracks":{  
         "get":{  
            "tags":[  
               "Tracks"
            ],
            "summary":"Return a list of TrackModels.",
            "description":"",
            "operationId":"GetTracks",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"Date",
                  "in":"query",
                  "description":"The date, in Vehicle Tracker application local time, that you want to get the event for. (for example 2017-10-30)",
                  "required":true,
                  "type":"string",
                  "format":"date"
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"The user id for which you want to get the events",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/TrackModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/users/{userid:int}/trackinfos":{  
         "get":{  
            "tags":[  
               "TrackInfos"
            ],
            "summary":"Return a list of TrackInfos.",
            "description":"",
            "operationId":"GetTrackInfos",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"Date",
                  "in":"query",
                  "description":"The date, in Vehicle TrackInfoer application local time, that you want to get the event for. (for example 2017-10-30)",
                  "required":true,
                  "type":"string",
                  "format":"date"
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"The user id for which you want to get the events",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/TrackInfoModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/tokens":{  
         "post":{  
            "tags":[  
               "Tokens"
            ],
            "summary":"Authorization",
            "description":"This method is used for getting an ApiKey",
            "operationId":"PostToken",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/Credentials"
                  },
                  "name":"Credentials",
                  "description":"Credentials for getting the token (ApiKey).",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/ApiKey"
                  }
               }
            }
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/tags":{  
         "get":{  
            "tags":[  
               "Tags"
            ],
            "summary":"Get a list of Tags",
            "description":"",
            "operationId":"GetTags",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/TagModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "post":{  
            "tags":[  
               "Tags"
            ],
            "summary":"Add a Tag",
            "description":"",
            "operationId":"PostTag",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/TagModel"
                  },
                  "name":"tag",
                  "description":"Tag object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/TagModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/tags/{tagid:long}":{  
         "put":{  
            "tags":[  
               "Tags"
            ],
            "summary":"Update a Tag",
            "description":"",
            "operationId":"PutTag",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"tagid:long",
                  "in":"path",
                  "description":"ID of the Tag you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/TagModel"
                  },
                  "name":"tag",
                  "description":"Tag object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/TagModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/tags/{tagid:int}/users":{  
         "get":{  
            "tags":[  
               "Tags/Users"
            ],
            "summary":"Get users within a tag",
            "description":"",
            "operationId":"GetUsersByTags",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               },
               {  
                  "name":"tagid:int",
                  "in":"path",
                  "description":"ID of the tag you want to work with.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/UserModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "post":{  
            "tags":[  
               "Tags/Users"
            ],
            "summary":"Add a user to a tag",
            "description":"",
            "operationId":"PostUser",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"tagid:int",
                  "in":"path",
                  "description":"ID of the tag you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/APIModel"
                  },
                  "name":"Id",
                  "description":"ID of the user that is added to the tag.",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/UserModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/tags/{tagid:int}/users/{userid:long}":{  
         "delete":{  
            "tags":[  
               "Tags/Users"
            ],
            "summary":"Remove a user from a tag",
            "description":"",
            "operationId":"DeleteUser",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"userid:long",
                  "in":"path",
                  "description":"ID of the User you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "name":"tagid:int",
                  "in":"path",
                  "description":"ID of the tag you want to work with.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/events":{  
         "get":{  
            "tags":[  
               "Events"
            ],
            "summary":"Get a list of Events",
            "description":"",
            "operationId":"GetEvents",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               },
               {  
                  "name":"Date",
                  "in":"query",
                  "description":"The date, in Vehicle Tracker application local time, that you want to get the event for. (for example 2017-10-30)",
                  "required":true,
                  "type":"string",
                  "format":"date"
               },
               {  
                  "name":"UserId",
                  "in":"query",
                  "description":"The user id for which you want to get the events",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"RuleId",
                  "in":"query",
                  "description":"The rule id for which you want to get the events",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"OpenEvents",
                  "in":"query",
                  "description":"Set this flag if you want to get only open events",
                  "required":false,
                  "type":"boolean",
                  "default":0
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/EventModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/eventrules":{  
         "get":{  
            "tags":[  
               "EventRules"
            ],
            "summary":"Get a list of EventRules",
            "description":"",
            "operationId":"GetEventRules",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/EventRuleModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/user/{userid:int}/jobs":{  
         "get":{  
            "tags":[  
               "Users/Jobs"
            ],
            "summary":"Get Jobs for a user",
            "description":"",
            "operationId":"GetJobs",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"FromIndex",
                  "in":"query",
                  "description":"The starting index of the page (exclusive)",
                  "required":false,
                  "type":"integer",
                  "format":"int64",
                  "default":0
               },
               {  
                  "name":"PageSize",
                  "in":"query",
                  "description":"The size of the page",
                  "required":false,
                  "type":"integer",
                  "default":1000
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"ID of the user.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/JobModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "post":{  
            "tags":[  
               "Users/Jobs"
            ],
            "summary":"Add a Job to a user",
            "description":"",
            "operationId":"PostJobToUser",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"ID of the user.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  },
                  "name":"job",
                  "description":"Job that is added to the user.",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/user/{userid:int}/jobs/{jobid:long}":{  
         "delete":{  
            "tags":[  
               "Users/Jobs"
            ],
            "summary":"Remove Job from a user",
            "description":"",
            "operationId":"DeleteJobFromUser",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"jobid:long",
                  "in":"path",
                  "description":"ID of the Job you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "name":"userid:int",
                  "in":"path",
                  "description":"ID of the user.",
                  "required":true,
                  "type":"integer"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/routes/{routeid:long}":{  
         "get":{  
            "tags":[  
               "Routes"
            ],
            "summary":"Get a Route",
            "description":"",
            "operationId":"GetRoute",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"routeid:long",
                  "in":"path",
                  "description":"ID of the Route you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/RouteModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "put":{  
            "tags":[  
               "Routes"
            ],
            "summary":"Update a Route",
            "description":"",
            "operationId":"PutRoute",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"routeid:long",
                  "in":"path",
                  "description":"ID of the Route you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/RouteModel"
                  },
                  "name":"route",
                  "description":"Route object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/RouteModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "delete":{  
            "tags":[  
               "Routes"
            ],
            "summary":"Delete a Route",
            "description":"",
            "operationId":"DeleteRoute",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"routeid:long",
                  "in":"path",
                  "description":"ID of the Route you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/RouteModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/routes":{  
         "post":{  
            "tags":[  
               "Routes"
            ],
            "summary":"Create a Route",
            "description":"",
            "operationId":"PostRoute",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/RouteModel"
                  },
                  "name":"route",
                  "description":"Route object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/RouteModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/jobs/{jobid:long}":{  
         "get":{  
            "tags":[  
               "Jobs"
            ],
            "summary":"Get a Job",
            "description":"",
            "operationId":"GetJob",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"jobid:long",
                  "in":"path",
                  "description":"ID of the Job you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/JobModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "put":{  
            "tags":[  
               "Jobs"
            ],
            "summary":"Update a Job",
            "description":"",
            "operationId":"PutJob",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"jobid:long",
                  "in":"path",
                  "description":"ID of the Job you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  },
                  "name":"job",
                  "description":"Job object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "delete":{  
            "tags":[  
               "Jobs"
            ],
            "summary":"Delete a Job",
            "description":"",
            "operationId":"DeleteJob",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "name":"jobid:long",
                  "in":"path",
                  "description":"ID of the Job you want to work with.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/applications/{applicationid:int}/jobs":{  
         "post":{  
            "tags":[  
               "Jobs"
            ],
            "summary":"Create a Job",
            "description":"",
            "operationId":"PostJob",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  },
                  "name":"job",
                  "description":"Job object",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "$ref":"#/definitions/JobModel"
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      },
      "/batch/applications/{applicationid:int}/jobs":{  
         "post":{  
            "tags":[  
               "Jobs"
            ],
            "summary":"Create multiple Jobs",
            "description":"",
            "operationId":"PostJobs",
            "parameters":[  
               {  
                  "name":"applicationid:int",
                  "in":"path",
                  "description":"ID of the application you want to work with.",
                  "required":true,
                  "type":"integer"
               },
               {  
                  "in":"body",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/JobModel"
                     }
                  },
                  "name":"jobs",
                  "description":"An array of Jobs.",
                  "required":true
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
               },
               "400":{  
                  "description":"Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
               },
               "401":{  
                  "description":"Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
               },
               "403":{  
                  "description":"Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
               },
               "404":{  
                  "description":"Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
               },
               "500":{  
                  "description":"Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
               },
               "503":{  
                  "description":"Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
               },
               "default":{  
                  "description":"default",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "type":"object",
                        "$ref":"#/definitions/JobModel"
                     }
                  }
               }
            },
            "security":[  
               {  
                  "ApiKey":[  

                  ]
               }
            ]
         },
         "parameters":[  

         ]
      }
   },
   "definitions":{  
      "ViewModel":{  
         "properties":{  
            "applicationID":{  
               "type":"integer"
            },
            "description":{  
               "type":"string"
            },
            "id":{  
               "type":"integer"
            },
            "matchAllTags":{  
               "type":"boolean"
            },
            "name":{  
               "type":"string"
            },
            "statusFilter":{  
               "type":"string"
            },
            "tagIDs":{  
               "type":"array",
               "items":{  
                  "type":"integer"
               }
            }
         },
         "required":[  
            "applicationID",
            "id",
            "matchAllTags"
         ],
         "type":"object"
      },
      "VariableModel":{  
         "properties":{  
            "name":{  
               "type":"string"
            },
            "type":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "UserModel":{  
         "properties":{  
            "calculatedSpeed":{  
               "type":"number"
            },
            "customFieldsValue":{  
               "type":"array",
               "items":{  
                  "type":"string"
               }
            },
            "description":{  
               "type":"string"
            },
            "deviceActivity":{  
               "type":"string"
            },
            "devices":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/Device"
               }
            },
            "driverID":{  
               "type":"string"
            },
            "email":{  
               "type":"string"
            },
            "icon":{  
               "$ref":"#/definitions/UserIconModel"
            },
            "id":{  
               "type":"integer"
            },
            "lastTransport":{  
               "type":"string"
            },
            "name":{  
               "type":"string"
            },
            "phoneNumber":{  
               "type":"string"
            },
            "surname":{  
               "type":"string"
            },
            "trackPoint":{  
               "$ref":"#/definitions/TrackPoint"
            },
            "username":{  
               "type":"string"
            },
            "userTemplateID":{  
               "type":"integer"
            }
         },
         "required":[  
            "calculatedSpeed",
            "deviceActivity",
            "id",
            "userTemplateID"
         ],
         "type":"object"
      },
      "Velocity":{  
         "properties":{  
            "groundSpeed":{  
               "type":"number"
            },
            "heading":{  
               "type":"number"
            }
         },
         "required":[  
            "groundSpeed",
            "heading"
         ],
         "type":"object"
      },
      "Position":{  
         "properties":{  
            "altitude":{  
               "type":"number"
            },
            "latitude":{  
               "type":"number"
            },
            "longitude":{  
               "type":"number"
            }
         },
         "required":[  
            "altitude",
            "latitude",
            "longitude"
         ],
         "type":"object"
      },
      "TrackPoint":{  
         "properties":{  
            "position":{  
               "$ref":"#/definitions/Position"
            },
            "uTC":{  
               "type":"string"
            },
            "valid":{  
               "type":"boolean"
            },
            "velocity":{  
               "$ref":"#/definitions/Velocity"
            }
         },
         "required":[  
            "uTC",
            "valid"
         ],
         "type":"object"
      },
      "MSISDN":{  
         "properties":{  
            "raw":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "OneWireBag":{  
         "properties":{  
            "deviceDefinitionID":{  
               "type":"integer"
            },
            "deviceID":{  
               "type":"integer"
            },
            "oneWireID":{  
               "type":"string"
            },
            "variableName":{  
               "type":"string"
            }
         },
         "required":[  
            "deviceDefinitionID",
            "deviceID"
         ],
         "type":"object"
      },
      "Device":{  
         "properties":{  
            "aPN":{  
               "type":"string"
            },
            "created":{  
               "type":"string"
            },
            "deviceDefinitionID":{  
               "type":"integer"
            },
            "devicePassword":{  
               "type":"string"
            },
            "email":{  
               "type":"string"
            },
            "gPRSPassword":{  
               "type":"string"
            },
            "gPRSUsername":{  
               "type":"string"
            },
            "hidePosition":{  
               "type":"boolean"
            },
            "iD":{  
               "type":"integer"
            },
            "iMEI":{  
               "type":"string"
            },
            "lastIP":{  
               "type":"string"
            },
            "lastPort":{  
               "type":"integer"
            },
            "latitude":{  
               "type":"number"
            },
            "longitude":{  
               "type":"number"
            },
            "mobileNetworkID":{  
               "type":"integer"
            },
            "msgFieldDictionaryID":{  
               "type":"integer"
            },
            "mSISDN":{  
               "$ref":"#/definitions/MSISDN"
            },
            "name":{  
               "type":"string"
            },
            "oneWireVariables":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/OneWireBag"
               }
            },
            "ownerEmail":{  
               "type":"string"
            },
            "ownerID":{  
               "type":"integer"
            },
            "ownerName":{  
               "type":"string"
            },
            "ownerUsername":{  
               "type":"string"
            },
            "profileId":{  
               "type":"integer"
            },
            "protocolID":{  
               "type":"string"
            },
            "protocolVersionID":{  
               "type":"integer"
            },
            "proximity":{  
               "type":"number"
            },
            "staticIP":{  
               "type":"string"
            },
            "staticPort":{  
               "type":"integer"
            },
            "timeStamp":{  
               "type":"string"
            }
         },
         "required":[  
            "created",
            "deviceDefinitionID",
            "hidePosition",
            "iD",
            "lastPort",
            "latitude",
            "longitude",
            "mobileNetworkID",
            "msgFieldDictionaryID",
            "ownerID",
            "profileId",
            "protocolVersionID",
            "proximity",
            "staticPort",
            "timeStamp"
         ],
         "type":"object"
      },
      "UserIconModel":{  
         "properties":{  
            "iconGUID":{  
               "type":"string"
            },
            "iconOffsetX":{  
               "type":"integer"
            },
            "iconOffsetY":{  
               "type":"integer"
            },
            "rotatable":{  
               "type":"boolean"
            }
         },
         "required":[  
            "iconOffsetX",
            "iconOffsetY",
            "rotatable"
         ],
         "type":"object"
      },
      "UserStatusModel":{  
         "properties":{  
            "position":{  
               "$ref":"#/definitions/Position"
            },
            "uTC":{  
               "type":"string"
            },
            "variables":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/VariableStatusModel"
               }
            },
            "velocity":{  
               "$ref":"#/definitions/Velocity"
            }
         },
         "required":[  
            "uTC"
         ],
         "type":"object"
      },
      "VariableStatusModel":{  
         "properties":{  
            "name":{  
               "type":"string"
            },
            "time":{  
               "type":"string"
            },
            "type":{  
               "type":"string"
            },
            "value":{  
               "type":"string"
            }
         },
         "required":[  
            "time"
         ],
         "type":"object"
      },
      "TrackModel":{  
         "properties":{  
            "position":{  
               "$ref":"#/definitions/Position"
            },
            "serverUtc":{  
               "type":"string"
            },
            "trackInfoId":{  
               "type":"integer"
            },
            "uTC":{  
               "type":"string"
            },
            "valid":{  
               "type":"boolean"
            },
            "variables":{  
               "type":"array",
               "items":{  
                  "type":"string"
               }
            },
            "velocity":{  
               "$ref":"#/definitions/Velocity"
            }
         },
         "required":[  
            "serverUtc",
            "trackInfoId",
            "uTC",
            "valid"
         ],
         "type":"object"
      },
      "TrackInfoModel":{  
         "properties":{  
            "boundingBox":{  
               "$ref":"#/definitions/BoundingBox"
            },
            "description":{  
               "type":"string"
            },
            "endPosition":{  
               "$ref":"#/definitions/Position"
            },
            "id":{  
               "type":"integer"
            },
            "name":{  
               "type":"string"
            },
            "startPosition":{  
               "$ref":"#/definitions/Position"
            },
            "totalDistance":{  
               "type":"number"
            },
            "userId":{  
               "type":"integer"
            }
         },
         "required":[  
            "id",
            "totalDistance",
            "userId"
         ],
         "type":"object"
      },
      "TokenModel":{  
         "properties":{  
            "password":{  
               "type":"string"
            },
            "token":{  
               "type":"string"
            },
            "username":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "Credentials":{  
         "properties":{  
            "password":{  
               "type":"string"
            },
            "username":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "ApiKey":{  
         "properties":{  
            "token":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "TagModel":{  
         "properties":{  
            "applicationId":{  
               "type":"integer"
            },
            "description":{  
               "type":"string"
            },
            "id":{  
               "type":"integer"
            },
            "name":{  
               "type":"string"
            },
            "usersIds":{  
               "type":"array",
               "items":{  
                  "type":"integer"
               }
            }
         },
         "required":[  
            "applicationId",
            "id"
         ],
         "type":"object"
      },
      "APIModel":{  
         "properties":{  
            "id":{  
               "type":"integer"
            }
         },
         "required":[  
            "id"
         ],
         "type":"object"
      },
      "EventModel":{  
         "properties":{  
            "applicationId":{  
               "type":"integer"
            },
            "arguments":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/Argument"
               }
            },
            "boundingBox":{  
               "$ref":"#/definitions/BoundingBox"
            },
            "closed":{  
               "type":"boolean"
            },
            "closedByUser":{  
               "type":"string"
            },
            "closedTimeStamp":{  
               "type":"string"
            },
            "endPosition":{  
               "$ref":"#/definitions/Position"
            },
            "eventStage":{  
               "type":"integer"
            },
            "expressionEvaluatorId":{  
               "type":"integer"
            },
            "id":{  
               "type":"integer"
            },
            "ongoing":{  
               "type":"boolean"
            },
            "ruleName":{  
               "type":"string"
            },
            "startPosition":{  
               "$ref":"#/definitions/Position"
            },
            "supportUi":{  
               "type":"boolean"
            },
            "userId":{  
               "type":"integer"
            }
         },
         "required":[  
            "applicationId",
            "closed",
            "closedTimeStamp",
            "eventStage",
            "expressionEvaluatorId",
            "id",
            "ongoing",
            "supportUi",
            "userId"
         ],
         "type":"object"
      },
      "Argument":{  
         "properties":{  
            "argumentID":{  
               "type":"integer"
            },
            "description":{  
               "type":"string"
            },
            "eventID":{  
               "type":"integer"
            },
            "sIValue":{  
               "type":"string"
            },
            "value":{  
               "type":"string"
            },
            "variable":{  
               "type":"string"
            }
         },
         "required":[  
            "argumentID",
            "eventID"
         ],
         "type":"object"
      },
      "BoundingBox":{  
         "properties":{  
            "maxM":{  
               "type":"number"
            },
            "maxTime":{  
               "type":"string"
            },
            "maxX":{  
               "type":"number"
            },
            "maxY":{  
               "type":"number"
            },
            "maxZ":{  
               "type":"number"
            },
            "minM":{  
               "type":"number"
            },
            "minTime":{  
               "type":"string"
            },
            "minX":{  
               "type":"number"
            },
            "minY":{  
               "type":"number"
            },
            "minZ":{  
               "type":"number"
            }
         },
         "required":[  
            "maxM",
            "maxTime",
            "maxX",
            "maxY",
            "maxZ",
            "minM",
            "minTime",
            "minX",
            "minY",
            "minZ"
         ],
         "type":"object"
      },
      "EventRuleModel":{  
         "properties":{  
            "applicationID":{  
               "type":"integer"
            },
            "description":{  
               "type":"string"
            },
            "disabled":{  
               "type":"boolean"
            },
            "id":{  
               "type":"integer"
            },
            "name":{  
               "type":"string"
            },
            "tagIDs":{  
               "type":"array",
               "items":{  
                  "type":"integer"
               }
            }
         },
         "required":[  
            "applicationID",
            "disabled",
            "id"
         ],
         "type":"object"
      },
      "JobModel":{  
         "properties":{  
            "customFields":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/CustomFieldModel"
               }
            },
            "description":{  
               "type":"string"
            },
            "id":{  
               "type":"string"
            },
            "jobState":{  
               "type":"string"
            },
            "lat":{  
               "type":"number"
            },
            "lon":{  
               "type":"number"
            },
            "routeId":{  
               "type":"string"
            },
            "scheduledTime":{  
               "type":"string"
            },
            "workerId":{  
               "type":"integer"
            }
         },
         "required":[  
            "lat",
            "lon",
            "workerId"
         ],
         "type":"object"
      },
      "RouteModel":{  
         "properties":{  
            "colour":{  
               "type":"string"
            },
            "customFields":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/CustomFieldModel"
               }
            },
            "id":{  
               "type":"string"
            },
            "jobs":{  
               "type":"array",
               "items":{  
                  "type":"object",
                  "$ref":"#/definitions/JobModel"
               }
            },
            "name":{  
               "type":"string"
            }
         },
         "type":"object"
      },
      "CustomFieldModel":{  
         "properties":{  
            "id":{  
               "type":"string"
            },
            "value":{  
               "type":"string"
            }
         },
         "type":"object"
      }
   },
   "securityDefinitions":{  
      "ApiKey":{  
         "type":"apiKey",
         "name":"Authorization",
         "in":"header"
      }
   },
   "tags":[  
      {  
         "name":"Views"
      },
      {  
         "name":"Variables"
      },
      {  
         "name":"Users"
      },
      {  
         "name":"Tracks"
      },
      {  
         "name":"TrackInfos"
      },
      {  
         "name":"Tokens",
         "description":"Use this resource to get an ApiKey"
      },
      {  
         "name":"Tags"
      },
      {  
         "name":"Tags/Users",
         "description":"Operations for listing/adding/removing user(s) in/to/from a tag"
      },
      {  
         "name":"Events"
      },
      {  
         "name":"EventRules"
      },
      {  
         "name":"Users/Jobs",
         "description":"Operations for listing/adding/removing jobs(s) of/to/from a user"
      },
      {  
         "name":"Routes"
      },
      {  
         "name":"Jobs"
      }
   ]
}
