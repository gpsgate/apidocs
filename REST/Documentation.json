{
  "swagger": "2.0",
  "info": {
    "title": "GpsGate API Documentation",
    "description": "GpsGate API service",
    "contact": {
      "email": "support@gpsgate.com"
    },
    "version": "v.1"
  },
  "basePath": "/comGpsGate/api/v.1",
  "paths": {
    "/applications/{applicationid:int}/views": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Return a list of Views.",
        "description": "",
        "operationId": "GetViews",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/ViewModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/variables": {
      "get": {
        "tags": [
          "Variables"
        ],
        "summary": "Return a list of Variables.",
        "description": "",
        "operationId": "GetVariables",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/VariableModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/status": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the latest position and variables for a user",
        "description": "",
        "operationId": "GetStatus",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserStatusModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/usersstatus": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Returns the latest position and variables for users within an application",
        "description": "",
        "operationId": "GetUsersStatus",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "UpdatesFrom",
            "in": "query",
            "description": "Returns status of all users that has been active after or equal to this timestamp (As defined by date-time - <a href=\"https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\"><b>RFC3339</b></a>)<br/>Sample date-time: <b>1996-12-19T16:39:57-08:00</b> <br/>This represents 39 minutes and 57 seconds after the 16th hour of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time). Note that this is equivalent to <b>1996-12-20T00:39:57Z</b> in UTC.",
            "required": false,
            "type": "string",
            "format": "date-time\t"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserStatusModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/customfields": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of user custom fields.",
        "description": "",
        "operationId": "GetCustomFields",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserCustomFieldModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/customfields/{customfieldname:string}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user custom field.",
        "description": "",
        "operationId": "PutCustomFieldByCustomFieldName",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "customfieldname:string",
            "in": "path",
            "description": "CustomFieldName of the CustomField you want to work with.",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCustomFieldModel"
            },
            "name": "customfield",
            "description": "CustomField object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserCustomFieldModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a list of Users.",
        "description": "",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "ViewId",
            "in": "query",
            "description": "Filters the result set by ViewId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "UpdatesFrom",
            "in": "query",
            "description": "Returns all users that has been active after or equal to this timestamp (As defined by date-time - <a href=\"https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14\"><b>RFC3339</b></a>)<br/>Sample date-time: <b>1996-12-19T16:39:57-08:00</b> <br/>This represents 39 minutes and 57 seconds after the 16th hour of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time). Note that this is equivalent to <b>1996-12-20T00:39:57Z</b> in UTC.",
            "required": false,
            "type": "string",
            "format": "date-time\t"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a User by UserId.",
        "description": "",
        "operationId": "GetUserByUserId",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "UserId of the User you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User",
        "description": "",
        "operationId": "PutUserByUserId",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "UserId of the User you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserEditModel"
            },
            "name": "user",
            "description": "User object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserEditModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{username:string}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Return a User by Username.",
        "description": "",
        "operationId": "GetUserByUsername",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "username:string",
            "in": "path",
            "description": "Username of the User you want to work with.",
            "required": true,
            "type": "string",
            "format": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User",
        "description": "",
        "operationId": "PutUserByUsername",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "username:string",
            "in": "path",
            "description": "Username of the User you want to work with.",
            "required": true,
            "type": "string",
            "format": ""
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserEditModel"
            },
            "name": "user",
            "description": "User object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserEditModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/trackinfos": {
      "get": {
        "tags": [
          "TrackInfos"
        ],
        "summary": "Return a list of TrackInfos.",
        "description": "",
        "operationId": "GetTrackInfos",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Date",
            "in": "query",
            "description": "The date, in Vehicle Tracker application local time, that you want to get the track summaries for. (for example 2017-10-30)",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "The user id for which you want to get the track summaries",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/TrackInfoModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/tracks": {
      "get": {
        "tags": [
          "Tracks"
        ],
        "summary": "Return a list of TrackModels.",
        "description": "",
        "operationId": "GetTracks",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Date",
            "in": "query",
            "description": "The date, in Vehicle Tracker application local time, that you want to get the tracks for. (for example 2017-10-30)",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "The user id for which you want to get the tracks",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/TrackModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/tokens": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "Authorization",
        "description": "This method is used for getting an ApiKey",
        "operationId": "PostToken",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Credentials"
            },
            "name": "Credentials",
            "description": "Credentials for getting the token (ApiKey).",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        }
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/tags/{tagid:int}/users": {
      "get": {
        "tags": [
          "Tags/Users"
        ],
        "summary": "Get users within a tag",
        "description": "",
        "operationId": "GetUsersWithinTag",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "tagid:int",
            "in": "path",
            "description": "ID of the tag you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tags/Users"
        ],
        "summary": "Add a user to a tag",
        "description": "",
        "operationId": "PostUserWithinTag",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "tagid:int",
            "in": "path",
            "description": "ID of the tag you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/APIModel"
            },
            "name": "Id",
            "description": "ID of the user that is added to the tag.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/UserModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/tags/{tagid:int}/users/{userid:long}": {
      "delete": {
        "tags": [
          "Tags/Users"
        ],
        "summary": "Remove a user from a tag",
        "description": "",
        "operationId": "DeleteUserWithinTagByUserid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:long",
            "in": "path",
            "description": "Userid of the User you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tagid:int",
            "in": "path",
            "description": "ID of the tag you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get a list of Tags",
        "description": "",
        "operationId": "GetTags",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/TagModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Add a Tag",
        "description": "",
        "operationId": "PostTag",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagModel"
            },
            "name": "tag",
            "description": "Tag object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/TagModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/tags/{tagid:long}": {
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update a Tag",
        "description": "",
        "operationId": "PutTagByTagid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "tagid:long",
            "in": "path",
            "description": "Tagid of the Tag you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagModel"
            },
            "name": "tag",
            "description": "Tag object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/TagModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/batch/applications/{applicationid:int}/reversegeocodes": {
      "post": {
        "tags": [
          "Geocoding"
        ],
        "summary": "Gets a list of geographic coordinates and returns their readable addresses or place names",
        "description": "",
        "operationId": "PostReverseGeocodes",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Position"
              }
            },
            "name": "geographic coordinates",
            "description": "An array of geographic coordinates.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/ReverseGeocodeResult"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/reversegeocode": {
      "get": {
        "tags": [
          "Geocoding"
        ],
        "summary": "Gets geographic coordinate and returns its readable address or place name",
        "description": "",
        "operationId": "GetReverseGeocodeByReverseGeocodeid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "lon",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/ReverseGeocodeResult"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofencegroups/{geofencegroupid:int}/geofences": {
      "get": {
        "tags": [
          "GeofenceGroups/Geofence"
        ],
        "summary": "Get Geofences within a Geofence Group",
        "description": "",
        "operationId": "GetGeofencesWithinGeofenceGroup",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "geofencegroupid:int",
            "in": "path",
            "description": "ID of the Geofence Group you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/GeofenceModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "GeofenceGroups/Geofence"
        ],
        "summary": "Add a Geofence to a Geofence Group",
        "description": "",
        "operationId": "PostGeofence",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofencegroupid:int",
            "in": "path",
            "description": "ID of the Geofence Group you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/APIModel"
            },
            "name": "Id",
            "description": "ID of the Geofence that is added to the Geofence Group.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofencegroups/{geofencegroupid:int}/geofences/{geofenceid:int}": {
      "delete": {
        "tags": [
          "GeofenceGroups/Geofence"
        ],
        "summary": "Remove a Geofence from a Geofence Group",
        "description": "",
        "operationId": "DeleteGeofenceByGeofenceId",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofenceid:int",
            "in": "path",
            "description": "ID of the Geofence you want to work with.",
            "required": true,
            "type": "integer",
            "format": "integer"
          },
          {
            "name": "geofencegroupid:int",
            "in": "path",
            "description": "ID of the Geofence Group you want to work with.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofencegroups": {
      "get": {
        "tags": [
          "GeofenceGroups"
        ],
        "summary": "Get all Geofence Groups in an Application",
        "description": "",
        "operationId": "GetGeofenceGroups",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/GeofenceGroupModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "GeofenceGroups"
        ],
        "summary": "Add a new Geofence Group",
        "description": "",
        "operationId": "PostGeofenceGroup",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            },
            "name": "geofencegroup",
            "description": "GeofenceGroup object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofencegroups/{geofencegroupid:long}": {
      "get": {
        "tags": [
          "GeofenceGroups"
        ],
        "summary": "Get a Geofence Group by Id",
        "description": "",
        "operationId": "GetGeofenceGroupByGeofenceGroupid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofencegroupid:long",
            "in": "path",
            "description": "GeofenceGroupid of the GeofenceGroup you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "GeofenceGroups"
        ],
        "summary": "Update a Geofence Group",
        "description": "",
        "operationId": "PutGeofenceGroupByGeofenceGroupid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofencegroupid:long",
            "in": "path",
            "description": "GeofenceGroupid of the GeofenceGroup you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            },
            "name": "geofencegroup",
            "description": "GeofenceGroup object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "GeofenceGroups"
        ],
        "summary": "Delete a Geofence Group",
        "description": "",
        "operationId": "DeleteGeofenceGroupByGeofenceGroupid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofencegroupid:long",
            "in": "path",
            "description": "GeofenceGroupid of the GeofenceGroup you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceGroupModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofences": {
      "get": {
        "tags": [
          "Geofences"
        ],
        "summary": "Return Geofences within an application.",
        "description": "",
        "operationId": "GetGeofences",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/GeofenceModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geofences/{geofenceid:long}": {
      "get": {
        "tags": [
          "Geofences"
        ],
        "summary": "Return a Geofence by ID.",
        "description": "",
        "operationId": "GetGeofenceByGeofenceid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geofenceid:long",
            "in": "path",
            "description": "Geofenceid of the Geofence you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeofenceModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/batch/applications/{applicationid:int}/geocodes": {
      "post": {
        "tags": [
          "Geocoding"
        ],
        "summary": "Gets a list of addresses and returns their geographic coordinates",
        "description": "",
        "operationId": "PostGeocodes",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "addresses",
            "description": "An array of addresses.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/GeocodeResult"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/geocode": {
      "get": {
        "tags": [
          "Geocoding"
        ],
        "summary": "Gets an address and returns its geographic coordinates",
        "description": "",
        "operationId": "GetGeocodeByGeocodeid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "geocodeid:long",
            "in": "path",
            "description": "Geocodeid of the Geocode you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/GeocodeResult"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/eventrules": {
      "get": {
        "tags": [
          "EventRules"
        ],
        "summary": "Get a list of EventRules",
        "description": "",
        "operationId": "GetEventRules",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/EventRuleModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a list of Events",
        "description": "",
        "operationId": "GetEvents",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "Date",
            "in": "query",
            "description": "The date, in Vehicle Tracker application local time, that you want to get the event for. (for example 2017-10-30)",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "UserId",
            "in": "query",
            "description": "The user id for which you want to get the events",
            "required": true,
            "type": "integer"
          },
          {
            "name": "RuleId",
            "in": "query",
            "description": "The rule id for which you want to get the events",
            "required": true,
            "type": "integer"
          },
          {
            "name": "OpenEvents",
            "in": "query",
            "description": "Set this flag if you want to get only open events",
            "required": false,
            "type": "boolean",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/EventModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/user/{userid:int}/jobs": {
      "get": {
        "tags": [
          "Users/Jobs"
        ],
        "summary": "Get Jobs for a user",
        "description": "",
        "operationId": "GetUserJobs",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "FromIndex",
            "in": "query",
            "description": "The starting index of the page (exclusive)",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "The size of the page",
            "required": false,
            "type": "integer",
            "default": 1000
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/JobModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users/Jobs"
        ],
        "summary": "Add a Job to a user",
        "description": "",
        "operationId": "PostUserJob",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JobModel"
            },
            "name": "job",
            "description": "Job that is added to the user.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/user/{userid:int}/jobs/{jobid:long}": {
      "delete": {
        "tags": [
          "Users/Jobs"
        ],
        "summary": "Remove Job from a user",
        "description": "",
        "operationId": "DeleteUserJobByJobid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jobid:long",
            "in": "path",
            "description": "Jobid of the Job you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/routes": {
      "post": {
        "tags": [
          "Routes"
        ],
        "summary": "Create a Route",
        "description": "",
        "operationId": "PostRoute",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RouteModel"
            },
            "name": "route",
            "description": "Route object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/RouteModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/routes/{routeid:long}": {
      "get": {
        "tags": [
          "Routes"
        ],
        "summary": "Get a Route",
        "description": "",
        "operationId": "GetRouteByRouteid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "routeid:long",
            "in": "path",
            "description": "Routeid of the Route you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/RouteModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Routes"
        ],
        "summary": "Update a Route",
        "description": "",
        "operationId": "PutRouteByRouteid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "routeid:long",
            "in": "path",
            "description": "Routeid of the Route you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RouteModel"
            },
            "name": "route",
            "description": "Route object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/RouteModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Routes"
        ],
        "summary": "Delete a Route",
        "description": "",
        "operationId": "DeleteRouteByRouteid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "routeid:long",
            "in": "path",
            "description": "Routeid of the Route you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/RouteModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create a Job",
        "description": "",
        "operationId": "PostJob",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JobModel"
            },
            "name": "job",
            "description": "Job object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/jobs/{jobid:long}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get a Job",
        "description": "",
        "operationId": "GetJobByJobid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jobid:long",
            "in": "path",
            "description": "Jobid of the Job you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/JobModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update a Job",
        "description": "",
        "operationId": "PutJobByJobid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jobid:long",
            "in": "path",
            "description": "Jobid of the Job you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/JobModel"
            },
            "name": "job",
            "description": "Job object",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Delete a Job",
        "description": "",
        "operationId": "DeleteJobByJobid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jobid:long",
            "in": "path",
            "description": "Jobid of the Job you want to work with.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/JobModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/batch/applications/{applicationid:int}/jobs": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create multiple Jobs",
        "description": "",
        "operationId": "PostJobs",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/JobModel"
              }
            },
            "name": "jobs",
            "description": "An array of Jobs.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/JobModel"
              }
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    },
    "/applications/{applicationid:int}/users/{userid:int}/publish": {
      "get": {
        "tags": [
          "Publish"
        ],
        "summary": "Get a publish link for a user",
        "description": "",
        "operationId": "GetPublishByPublishid",
        "parameters": [
          {
            "name": "applicationid:int",
            "in": "path",
            "description": "ID of the application you want to work with.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userid:int",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "expires",
            "in": "query",
            "description": "Time in minutes when the link should expire",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: The request has succeeded. The information returned with the response is dependent on the method used in the request."
          },
          "400": {
            "description": "Bad Request: The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."
          },
          "401": {
            "description": "Unauthorized: The request requires user authentication. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials."
          },
          "403": {
            "description": "Forbidden: The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "404": {
            "description": "Not Found: The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          },
          "500": {
            "description": "Internal Server Error: The server encountered an unexpected condition which prevented it from fulfilling the request."
          },
          "503": {
            "description": "Service Unavailable: The server is currently unable to handle the request due to maintenance of the server or because the service is not running."
          },
          "default": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/PublishModel"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "ViewModel": {
      "properties": {
        "applicationID": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "matchAllTags": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "statusFilter": {
          "type": "string"
        },
        "tagIDs": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "applicationID",
        "id",
        "matchAllTags"
      ],
      "type": "object"
    },
    "VariableModel": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserStatusModel": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "position": {
          "$ref": "#/definitions/Position"
        },
        "uTC": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/VariableStatusModel"
          }
        },
        "velocity": {
          "$ref": "#/definitions/Velocity"
        }
      },
      "required": [
        "id",
        "uTC"
      ],
      "type": "object"
    },
    "VariableStatusModel": {
      "properties": {
        "name": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "time"
      ],
      "type": "object"
    },
    "UserCustomFieldModel": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserModel": {
      "properties": {
        "calculatedSpeed": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "deviceActivity": {
          "type": "string"
        },
        "devices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Device"
          }
        },
        "driverID": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "icon": {
          "$ref": "#/definitions/UserIconModel"
        },
        "id": {
          "type": "integer"
        },
        "lastTransport": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "trackPoint": {
          "$ref": "#/definitions/TrackPoint"
        },
        "username": {
          "type": "string"
        },
        "userTemplateID": {
          "type": "integer"
        }
      },
      "required": [
        "calculatedSpeed",
        "deviceActivity",
        "id",
        "userTemplateID"
      ],
      "type": "object"
    },
    "UserEditModel": {
      "properties": {
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "Velocity": {
      "properties": {
        "groundSpeed": {
          "type": "number"
        },
        "heading": {
          "type": "number"
        }
      },
      "required": [
        "groundSpeed",
        "heading"
      ],
      "type": "object"
    },
    "Position": {
      "properties": {
        "altitude": {
          "type": "number"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "required": [
        "altitude",
        "latitude",
        "longitude"
      ],
      "type": "object"
    },
    "TrackPoint": {
      "properties": {
        "position": {
          "$ref": "#/definitions/Position"
        },
        "uTC": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        },
        "velocity": {
          "$ref": "#/definitions/Velocity"
        }
      },
      "required": [
        "uTC",
        "valid"
      ],
      "type": "object"
    },
    "MSISDN": {
      "properties": {
        "raw": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OneWireBag": {
      "properties": {
        "deviceDefinitionID": {
          "type": "integer"
        },
        "deviceID": {
          "type": "integer"
        },
        "oneWireID": {
          "type": "string"
        },
        "variableName": {
          "type": "string"
        }
      },
      "required": [
        "deviceDefinitionID",
        "deviceID"
      ],
      "type": "object"
    },
    "Device": {
      "properties": {
        "aPN": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "deviceDefinitionID": {
          "type": "integer"
        },
        "devicePassword": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gPRSPassword": {
          "type": "string"
        },
        "gPRSUsername": {
          "type": "string"
        },
        "hidePosition": {
          "type": "boolean"
        },
        "iD": {
          "type": "integer"
        },
        "iMEI": {
          "type": "string"
        },
        "lastIP": {
          "type": "string"
        },
        "lastPort": {
          "type": "integer"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "mobileNetworkID": {
          "type": "integer"
        },
        "msgFieldDictionaryID": {
          "type": "integer"
        },
        "mSISDN": {
          "$ref": "#/definitions/MSISDN"
        },
        "name": {
          "type": "string"
        },
        "oneWireVariables": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OneWireBag"
          }
        },
        "ownerEmail": {
          "type": "string"
        },
        "ownerID": {
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "ownerUsername": {
          "type": "string"
        },
        "profileId": {
          "type": "integer"
        },
        "protocolID": {
          "type": "string"
        },
        "protocolVersionID": {
          "type": "integer"
        },
        "proximity": {
          "type": "number"
        },
        "staticIP": {
          "type": "string"
        },
        "staticPort": {
          "type": "integer"
        },
        "timeStamp": {
          "type": "string"
        }
      },
      "required": [
        "created",
        "deviceDefinitionID",
        "hidePosition",
        "iD",
        "lastPort",
        "latitude",
        "longitude",
        "mobileNetworkID",
        "msgFieldDictionaryID",
        "ownerID",
        "profileId",
        "protocolVersionID",
        "proximity",
        "staticPort",
        "timeStamp"
      ],
      "type": "object"
    },
    "UserIconModel": {
      "properties": {
        "iconGUID": {
          "type": "string"
        },
        "iconOffsetX": {
          "type": "integer"
        },
        "iconOffsetY": {
          "type": "integer"
        },
        "rotatable": {
          "type": "boolean"
        }
      },
      "required": [
        "iconOffsetX",
        "iconOffsetY",
        "rotatable"
      ],
      "type": "object"
    },
    "TrackInfoModel": {
      "properties": {
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "description": {
          "type": "string"
        },
        "endPosition": {
          "$ref": "#/definitions/Position"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "startPosition": {
          "$ref": "#/definitions/Position"
        },
        "totalDistance": {
          "type": "number"
        },
        "userId": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "totalDistance",
        "userId"
      ],
      "type": "object"
    },
    "BoundingBox": {
      "properties": {
        "maxM": {
          "type": "number"
        },
        "maxTime": {
          "type": "string"
        },
        "maxX": {
          "type": "number"
        },
        "maxY": {
          "type": "number"
        },
        "maxZ": {
          "type": "number"
        },
        "minM": {
          "type": "number"
        },
        "minTime": {
          "type": "string"
        },
        "minX": {
          "type": "number"
        },
        "minY": {
          "type": "number"
        },
        "minZ": {
          "type": "number"
        }
      },
      "required": [
        "maxM",
        "maxTime",
        "maxX",
        "maxY",
        "maxZ",
        "minM",
        "minTime",
        "minX",
        "minY",
        "minZ"
      ],
      "type": "object"
    },
    "TrackModel": {
      "properties": {
        "position": {
          "$ref": "#/definitions/Position"
        },
        "serverUtc": {
          "type": "string"
        },
        "trackInfoId": {
          "type": "integer"
        },
        "uTC": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "velocity": {
          "$ref": "#/definitions/Velocity"
        }
      },
      "required": [
        "serverUtc",
        "trackInfoId",
        "uTC",
        "valid"
      ],
      "type": "object"
    },
    "TokenModel": {
      "properties": {
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Credentials": {
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiKey": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "APIModel": {
      "properties": {
        "id": {
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "TagModel": {
      "properties": {
        "applicationId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "usersIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "applicationId",
        "id"
      ],
      "type": "object"
    },
    "ReverseGeocodeResult": {
      "properties": {
        "geocoderProviderSource": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "type": "object"
    },
    "Location": {
      "properties": {
        "address": {
          "type": "string"
        },
        "administrativeAreaName": {
          "type": "string"
        },
        "cityName": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "formattedResult": {
          "type": "string"
        },
        "neighborhood": {
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/Position"
        },
        "postalCodeNumber": {
          "type": "string"
        },
        "streetBox": {
          "type": "string"
        },
        "streetName": {
          "type": "string"
        },
        "streetNumber": {
          "type": "string"
        },
        "subAdministrativeAreaName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeofenceModel": {
      "properties": {
        "circleShape": {
          "$ref": "#/definitions/CircleShape"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "polygonShape": {
          "$ref": "#/definitions/PolygonShape"
        },
        "routeShape": {
          "$ref": "#/definitions/RouteShape"
        },
        "shapeType": {
          "$ref": "#/definitions/ShapeType"
        }
      },
      "required": [
        "id",
        "shapeType"
      ],
      "type": "object"
    },
    "GeofenceGroupModel": {
      "properties": {
        "colour": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "geofenceIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "pinned": {
          "type": "boolean"
        },
        "useInGeocoding": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "pinned",
        "useInGeocoding"
      ],
      "type": "object"
    },
    "Position2D": {
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "type": "object"
    },
    "ShapeType": {
      "type": "string",
      "enum": [
        "Polygon",
        "Circle",
        "Route"
      ]
    },
    "PolygonShape": {
      "properties": {
        "vertices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Position2D"
          }
        }
      },
      "type": "object"
    },
    "CircleShape": {
      "properties": {
        "center": {
          "$ref": "#/definitions/Position2D"
        },
        "radius": {
          "type": "number"
        }
      },
      "required": [
        "radius"
      ],
      "type": "object"
    },
    "RouteShape": {
      "properties": {
        "radius": {
          "type": "number"
        },
        "vertices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Position2D"
          }
        }
      },
      "required": [
        "radius"
      ],
      "type": "object"
    },
    "GeocodeResult": {
      "properties": {
        "geocoderProviderSource": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Location"
          }
        },
        "query": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventRuleModel": {
      "properties": {
        "applicationID": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "tagIDs": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "applicationID",
        "disabled",
        "id"
      ],
      "type": "object"
    },
    "EventModel": {
      "properties": {
        "applicationId": {
          "type": "integer"
        },
        "arguments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Argument"
          }
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "closed": {
          "type": "boolean"
        },
        "closedByUser": {
          "type": "string"
        },
        "closedTimeStamp": {
          "type": "string"
        },
        "endPosition": {
          "$ref": "#/definitions/Position"
        },
        "eventStage": {
          "type": "integer"
        },
        "expressionEvaluatorId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "ongoing": {
          "type": "boolean"
        },
        "ruleName": {
          "type": "string"
        },
        "startPosition": {
          "$ref": "#/definitions/Position"
        },
        "supportUi": {
          "type": "boolean"
        },
        "userId": {
          "type": "integer"
        }
      },
      "required": [
        "applicationId",
        "closed",
        "closedTimeStamp",
        "eventStage",
        "expressionEvaluatorId",
        "id",
        "ongoing",
        "supportUi",
        "userId"
      ],
      "type": "object"
    },
    "Argument": {
      "properties": {
        "argumentID": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "eventID": {
          "type": "integer"
        },
        "sIValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "variable": {
          "type": "string"
        }
      },
      "required": [
        "argumentID",
        "eventID"
      ],
      "type": "object"
    },
    "CustomFieldModel": {
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobModel": {
      "properties": {
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CustomFieldModel"
          }
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "jobState": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lon": {
          "type": "number"
        },
        "routeId": {
          "type": "string"
        },
        "scheduledTime": {
          "type": "string"
        },
        "workerId": {
          "type": "integer"
        }
      },
      "required": [
        "lat",
        "lon",
        "workerId"
      ],
      "type": "object"
    },
    "RouteModel": {
      "properties": {
        "colour": {
          "type": "string"
        },
        "customFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CustomFieldModel"
          }
        },
        "id": {
          "type": "string"
        },
        "jobs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JobModel"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublishModel": {
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "Views"
    },
    {
      "name": "Variables"
    },
    {
      "name": "Users"
    },
    {
      "name": "Application"
    },
    {
      "name": "TrackInfos"
    },
    {
      "name": "Tracks"
    },
    {
      "name": "Tokens",
      "description": "Use this resource to get an ApiKey"
    },
    {
      "name": "Tags/Users",
      "description": "Operations for listing/adding/removing user(s) in/to/from a tag"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Geocoding"
    },
    {
      "name": "GeofenceGroups/Geofence",
      "description": "Operations for listing/adding/removing geofence(s) in/to/from a Geofence Groups"
    },
    {
      "name": "GeofenceGroups"
    },
    {
      "name": "Geofences"
    },
    {
      "name": "EventRules"
    },
    {
      "name": "Events"
    },
    {
      "name": "Users/Jobs",
      "description": "Operations for listing/adding/removing jobs(s) of/to/from a user"
    },
    {
      "name": "Routes"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Publish"
    }
  ],
}